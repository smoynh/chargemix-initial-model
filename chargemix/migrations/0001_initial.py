# Generated by Django 4.0.4 on 2022-05-21 07:18

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chargemix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('furnace_size', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(1)])),
                ('tapping_time', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('tapping_temp', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('rate_per_unit', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_elec_model', models.BooleanField(default=False)),
                ('use_elem_recov_rate', models.BooleanField(default=True)),
                ('fesimg_rec_rate', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('target_chemistry', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ChargemixProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('curr_qty', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('optimized_qty', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('min_qty', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('max_qty', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('qty_roundoff', models.PositiveIntegerField(blank=True, default=0, validators=[django.core.validators.MaxValueValidator(6)])),
                ('metal_recov_rate', models.DecimalField(blank=True, decimal_places=2, default=100, max_digits=5, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('product_element', models.TextField(blank=True, default='')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Element',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('symbol', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('has_nodu', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(1)])),
                ('type', models.CharField(choices=[('furnace_mat', 'furnace material'), ('ladle_mat', 'ladle material'), ('additive', 'additive'), ('nodularization_mat', 'nodularization material')], default='furnace_material', max_length=50)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='chargemix_p_name_282688_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['type'], name='chargemix_p_type_599e5f_idx'),
        ),
        migrations.AddIndex(
            model_name='grade',
            index=models.Index(fields=['name'], name='chargemix_g_name_a14083_idx'),
        ),
        migrations.AddField(
            model_name='chargemixproduct',
            name='chargemix',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chargemix', to='chargemix.chargemix'),
        ),
        migrations.AddField(
            model_name='chargemixproduct',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product', to='chargemix.product'),
        ),
        migrations.AddField(
            model_name='chargemix',
            name='grade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grade', to='chargemix.grade'),
        ),
        migrations.AddIndex(
            model_name='chargemix',
            index=models.Index(fields=['name'], name='chargemix_c_name_e7efda_idx'),
        ),
        migrations.AddIndex(
            model_name='chargemix',
            index=models.Index(fields=['created'], name='chargemix_c_created_79e205_idx'),
        ),
    ]
